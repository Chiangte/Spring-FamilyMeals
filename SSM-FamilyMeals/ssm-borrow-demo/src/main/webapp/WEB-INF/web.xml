<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" version="4.0">

	<!-- 欢迎页配置 -->
	<welcome-file-list>
		<welcome-file>login</welcome-file>
	</welcome-file-list>
	<!-- 常见错误页配置 -->
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/404.jsp</location>
	</error-page>

	<!-- spring 支持 初始化spring容器
		 spring的初始化配置通过listener标签加载spring配置文件
		 默认到WEB-INF下加载名字叫applicationContext.xml
		 注册ServletContext监听器，创建容器对象，并且将ApplicationContext对象放到Application域中 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--通过context-param标签加载指定的配置文件-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	
	<!-- spring mvc支持 -->
	<!--编码过滤器-->
	<filter>
		<!--解决POST乱码-->
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!--处理请求乱码-->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<!--处理响应乱码-->
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--spring-Mvc的前端控制器
		配置springMvc分发器， DispatcherServlet
		默认加载WEB-INF下的 servlet-name -servlet.xml配置文件:spring-mvc.xml
		针对SpringMVC的配置：中央调度器：本质上一个serlvet配置的关于SpringmVC组件 -->
	<servlet>
		<servlet-name>DispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- spring-mvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml"
			 配置springMVC需要加载的配置文件 通过初始化参数指定配置文件 然后就跟servlet-name中的值没有关系了-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-mvc.xml</param-value>
		</init-param>
		<!--大于等于1时，启动服务时实例化/初始化-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<!-- 匹配所有请求，此处也可以配置成 *.do形式 -->
		<url-pattern>/login</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

  <!-- 添加sitemesh支持 -->
	<!--网页布局和修饰的框架，利用它可以将网页的内容和页面结构分离，以达到页面结构共享的目的
		能处理动态的内容，如jsp，php，asp等产生的内容，
		它也能处理静态的内容如html的内容，使得它的内容也符合你的页面结构的要求-->
	<filter>
  	<filter-name>SiteMeshFilter</filter-name>
  	<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>SiteMeshFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>  
  
  <!-- google验证码支持 -->
  <servlet>
  	<servlet-name>KaptchaServlet</servlet-name>
  	<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
  	<!-- 不显示边框  -->
  	<init-param>
  		<param-name>kaptcha.border</param-name>
  		<param-value>no</param-value>
  	</init-param>
  	<!-- 干扰线的颜色 -->
  	<init-param>
  		<param-name>kaptcha.noise.color</param-name>
  		<param-value>44,104,157</param-value>
  	</init-param>
  	<!-- 验证码颜色 -->
  	<init-param>
  		<param-name>kaptcha.textproducer.font.color</param-name>
  		<param-value>44,104,157</param-value>
  	</init-param>
  	<!-- 背景色起始颜色 -->
  	<init-param>
  		<param-name>kaptcha.background.clear.from</param-name>
  		<param-value>44,104,157</param-value>
  	</init-param>
  	<!-- 背景色结束颜色 -->
  	<init-param>
  		<param-name>kaptcha.background.clear.to</param-name>
  		<param-value>255,255,255</param-value>
  	</init-param>
  	<!-- 验证码长度 -->
  	<init-param>
  		<param-name>kaptcha.textproducer.char.length</param-name>
  		<param-value>1</param-value>
  	</init-param>
  	<!-- 验证码字体 -->
  	<init-param>
  		<param-name>kaptcha.textproducer.font.names</param-name>
  		<param-value>宋体,隶书</param-value>
  	</init-param>
  	<!-- 验证码字符库 -->
  	<init-param>
  		<param-name>kaptcha.textproducer.char.string</param-name>
  		<param-value>abcde2345678gfynmnpwx</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>KaptchaServlet</servlet-name>
  	<url-pattern>/kaptcha.jpg</url-pattern>
  </servlet-mapping>

	<!--设置session无操作5分钟后销毁-->
	<!-- <session-config>
         <session-timeout>5</session-timeout>
     </session-config>-->
</web-app>